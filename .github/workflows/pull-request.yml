name: Unit Tests
#  Esto es una prueba
run-name: ${{ github.actor }} is execute test coverage ðŸ˜Ž
on:
  pull_request:
    branches:
      - "master"
    types: [opened, reopened, synchronize]

jobs:
  tests:
    if: startsWith(github.head_ref, 'feature')
    runs-on: ubuntu-latest

    permissions: write-all

    strategy:
      matrix:
        node-version: [16.x]

    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{matrix.node-version}}
      - name: Install dependencies
        run: yarn install --frozen-lockfile
      - name: Do you have a unit test?
        uses: actions/github-script@v6
        with:
          script: |
            const number = await context.payload.pull_request.number;
            const files = await github.rest.pulls.listFiles({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: number,
            });

            const regex = /.*(spec|test).(ts|js|tsx)$/;
            const isShow = files.data.some((file) => regex.test(file.filename));
            if (!isShow) {
              core.setFailed("Debe contener al menos una prueba");
            }

            const cadena = files.data.reduce((acc, element) => {
              if(regex.test(element.filename)) {
                acc.push(element.filename) 
              } 
              return acc
            }, [])

            const child_process = require('child_process')
            
            const { stdout, stderr } = await child_process.exec(`yarn jest ${cadena} --ci --json --coverage --testLocationInResults --outputFile=report.json`)
            console.log(`stdout: ${stdout}`);
            console.error(`stderr: ${stderr}`);
      # - name: Run tests
      #   id: test-changedsince
      #   run: yarn test:changedsince
      # - name: Coverage Report
      #   if: ${{ failure() || success() }}
      #   uses: ArtiomTr/jest-coverage-report-action@v2
      #   with:
      #     coverage-file: report.json
      #     base-coverage-file: report.json
      #     annotations: failed-tests
      #     skip-step: install
